#!/bin/bash

. /lib/lsb/init-functions
. /sbin/splash-functions.sh

spl_decor="/sbin/fbcondecor_ctl"
spl_fbsupport=0

check_fbsupport()
{
    if [ -e /dev/fbsplash ] && [ -e /proc/fbsplash -o -e /proc/sys/kernel/fbsplash ]; then
        spl_fbsupport=1
    fi
    
    if [ -e /dev/fbcondecor ] && [ -e /proc/fbsplash -o -e /proc/sys/kernel/fbcondecor ]; then
        spl_fbsupport=1
    fi
}

#
## Prevent killall5 of fbsplashd.static
#
splash_add_omit()
{
    touch /var/run/sendsigs.omit 2>/dev/null
    if [ $? -eq 0 ]; then
	pidof=`pidofproc fbsplashd.static`
	[ "x${pidof}" != "x" ] &&  echo ${pidof} >> /var/run/sendsigs.omit
    fi
}

#
## Remove killall5 protection
#
splash_remove_omit()
{
    pidof=`pidofproc fbsplashd.static`
    if [ -s /var/run/sendsigs.omit -a "x${pidof}" != "x" ]; then
	touch /var/run/sendsigs.omit 2>/dev/null
	if [ $? -eq 0 ]; then
	    rm -f /var/run/sendsigs.omit.tmp
	    egrep -v "^${pidof}\$" /var/run/sendsigs.omit > /var/run/sendsigs.omit.tmp
	    mv -f /var/run/sendsigs.omit.tmp /var/run/sendsigs.omit
	fi
    fi
}

#
## Prevent killall5 of fbsplashd.static
## Done at each progress, because it is likely the the splash_add_omit
## has failed, /var/run being read-only at that time
#
splash_update_omit()
{
    touch /var/run/sendsigs.omit 2>/dev/null
    if [ $? -eq 0 ]; then
	pidof=`pidofproc fbsplashd.static`
	if [ "x${pidof}" != "x" ]; then
	    egrep -q "^${pidof}\$" /var/run/sendsigs.omit 2>/dev/null
	    [ $? -ne 0 ] && echo ${pidof} >> /var/run/sendsigs.omit 2>/dev/null
	fi
    fi
}

splash_setup

case "$1" in
    start)
	check_fbsupport
	
	splash rc_init sysinit
	
        # only do this if the kernel supports fbsplash
	if [ ${spl_fbsupport} -eq 1 ]; then
	    
            if [ -z "${SPLASH_TTYS}" ]; then
                if [ -n "${RC_TTY_NUMBER}" ]; then	
                    SPLASH_TTYS=$(seq 0 "${RC_TTY_NUMBER}")
                else
                    SPLASH_TTYS="0 1 3 4 5 6"
                fi
            fi

            # Initialize fbcondecodor
	    for TTY in ${SPLASH_TTYS} ; do
		theme="${SPLASH_THEME}"
		
		[[ ${TTY} == "1" && -z "$(${spl_decor} -c getstate --tty=${TTY}| grep 'off')" ]] && continue
		[[ ${TTY} == "0" ]] && continue
		
		if [[ -n "${SPLASH_TTY_MAP}" ]]; then
		    for i in ${SPLASH_TTY_MAP} ; do
			if [[ "${i%:*}" == "${TTY}" ]]; then
			    theme="${i#*:}"
			fi
		    done
		fi
		
                #
                ## openvt is in the console-tools package
                #
		if [[ -x /usr/bin/openvt ]]; then
		    /usr/bin/openvt -c ${TTY} echo -n "" 2>/dev/null
		fi
		
		[[ -z "$(${spl_decor} -c getstate --tty=${TTY} 2>/dev/null| grep 'off')" && -n "$(${spl_decor} -c getcfg --tty=${TTY} 2>/dev/null| grep ^theme:[[:space:]]*${theme}$)" ]] && continue
		${spl_decor} --tty="${TTY}" -m v -t "${theme}" -c setcfg 2>/dev/null 
		${spl_decor} --tty="${TTY}" -m v -t "${theme}" -c setpic 2>/dev/null
		${spl_decor} --tty="${TTY}" -c on 2>/dev/null
	    done
	    #
	    ## Prevent killall5 of fbsplashd.static
	    #
	    splash_add_omit
	else
            # echo "Your kernel does not support fbcondecor"
	    exit 1
	fi
	;;
    
    status)
	pidofproc fbsplashd.static >/dev/null
	status=$?
	exit $status
	;;
    
    restart)
	$0 stop
	$0 start
	;;
    
    condrestart)
	$0 status
	if [ $? -ne 0 ]; then
            splash_cache_cleanup
            $0 start
        fi
	;;
    
    reload|force-reload)
	echo "Error: argument '$1' not supported" >&2
	exit 3
	;;
    
    stop)
	#
	## Remove prevention against killall5
	#
        splash_remove_omit
	splash_exit
	;;
    
    progress)
        $0 condrestart
        splash_update_omit
	splash_comm_send "progress ${2}"
	splash_comm_send "paint"
	;;
    
    PROGRESS)
        $0 condrestart
        splash_update_omit
        value=${2}
	if [ ${value} -lt 0 ]; then
	    value=$[100+${value}]
	fi
	value=$((${value} * 65535 / 100))
	splash_comm_send "progress ${value}"
	splash_comm_send "paint"
	;;
    
    *)
	echo "Usage: splashutils [start|stop|status|condrestart|restart|progress {0...65535}|PROGRESS {-100...+100}]" >&2
	exit 3
	;;
esac

exit 0
