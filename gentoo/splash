#!/bin/bash
# Copyright 1999-2005 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
#
# splash - a script to handle rc_scripts events and execute appropriate
#          fbsplash actions; loosely based on bootsplash /sbin/splash
#
# Author: Michal Januszewski <spock@gentoo.org>
#

# Make sure we're running in a sane environment
[[ ! -e /dev/fbsplash ]] 			&& exit 1
[[ ! -x /sbin/splash_util.static ]] && exit 1

[[ -z ${SPLASH_BOOT_MESSAGE} ]] 	&& SPLASH_BOOT_MESSAGE="Booting the system... Press F2 for verbose mode"
[[ -z ${SPLASH_SHUTDOWN_MESSAGE} ]] && SPLASH_SHUTDOWN_MESSAGE="Shutting down the system... Press F2 for verbose mode"
[[ -z ${SPLASH_REBOOT_MESSAGE} ]] 	&& SPLASH_REBOOT_MESSAGE="Rebooting the system... Press F2 for verbose mode"

[[ RC_GOT_FUNCTIONS != "yes" ]] && . /sbin/functions.sh
[[ -f /etc/conf.d/splash ]] 	&& . /etc/conf.d/splash
[[ -f /etc/conf.d/rc ]] 		&& . /etc/conf.d/rc
[[ ${RUNLEVEL} == "6" || ${RUNLEVEL} == "0" ]] && SHUTDOWN="yes"

SPLUTIL="/sbin/splash_util.static"

splash_setup 'force'

get_boot_message() {
	local text

	if [[ ${RUNLEVEL} == "6" ]]; then
		text=${SPLASH_REBOOT_MESSAGE}
	elif [[ ${RUNLEVEL} == "0" ]]; then
		text=${SPLASH_SHUTDOWN_MESSAGE}
	else
		text=${SPLASH_BOOT_MESSAGE}
	fi	

	echo ${text}
}

update_progress() {
	# spl_init and spl_rate are deprecated and will probably be removed soon
	if [ "${spl_scripts}" -gt 0 ]; then
		progress=$(($spl_init + ($spl_count) * ($spl_rate - $spl_init) / $spl_scripts))
	else
		progress=0
	fi

	splash_comm_send "progress ${progress}"
	
	if [[ "$(splash_get_mode)" == "silent" ]]; then
		splash_comm_send "paint"
	fi
}

# Start the splash daemon
if [ "$1" == "start" ]; then
	# Display a warning if the system is not configured to display init messages
	# to tty1. This can cause a lot of problems if it's not handled correctly, so
	# we don't allow silent splash to run on incorrectly configured systems.
	if [[ -z "`grep 'CONSOLE=/dev/tty1' /proc/cmdline`" && 
		  -z "`grep 'CONSOLE=/dev/vc/1' /proc/cmdline`" ]]; then
		if [[ ${SPLASH_MODE_REQ} == "silent" ]]; then
			ewarn "You don't appear to have a correct CONSOLE= setting on your kernel"
			ewarn "command line. Silent splash will not be enabled. Please add either"
			ewarn "CONSOLE=/dev/tty1 or CONSOLE=/dev/vc/1 to your kernel command line"
			ewarn "to avoid this message."
			${SPLUTIL} -c on 2>/dev/null
		fi
		exit 1
	fi

	# In the unlikely case that there's a splash daemon running -- kill it.
	killall -9 ${SPLUTIL} 2>/dev/null
	
	# Prepare the communication FIFO
	rm -f ${spl_fifo} 2>/dev/null
	mkfifo ${spl_fifo}	
	
	# Start the splash daemon
	${SPLUTIL} -d --theme=${SPLASH_THEME}

	# Get the PID of the daemon and save it
	pid=$(ps -o pid,ppid -C splash_util.static 2>/dev/null | grep '.* 1$' | awk '{ print $1 }')
	echo "${pid}" > ${spl_pidfile} 

	# Set the silent TTY and boot message
	splash_comm_send "set tty silent ${SPLASH_TTY}"
	splash_comm_send "set message $(get_boot_message)"
	
	if [[ ${SPLASH_MODE_REQ} == "silent" ]] ; then
		splash_comm_send "set mode silent"
		splash_comm_send "repaint"
		${SPLUTIL} -c on 2>/dev/null
	fi
elif [ "$1" == "silent" ]; then
	splash_comm_send "set mode silent"
	${SPLUTIL} -c on 2>/dev/null
	update_progress
elif [ "$1" == "verbose" ]; then
	if [[ "$(splash_get_mode)" == "silent" ]]; then
		if [[ -x /usr/bin/chvt ]]; then
			/usr/bin/chvt 1
		else
			splash_comm_send "set mode verbose"
		fi
	fi
else
	update_progress
fi

exit 0

# vim:ts=4
